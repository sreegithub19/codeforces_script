name: Build and Test WebAssembly (Node.js)

on:
  push:
    branches:
      - web_assembly_

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository code
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 2: Set up Node.js environment
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      # Step 3: Install dependencies (including AssemblyScript or other WASM tools)
      - name: Install dependencies
        run: |
          npm install

      # Step 4: Build WebAssembly module (using AssemblyScript, for example)
      - name: Build WebAssembly
        run: |
          npm run build

      # Step 5: Run tests to ensure the WebAssembly module works with Node.js
      - name: Run tests
        run: |
          npm test

# WASI
      # Install AssemblyScript compiler (asc)
      - name: Install AssemblyScript
        run: |
          npm install -g assemblyscript

      # Compile TypeScript to WASI-compatible WebAssembly (using AssemblyScript)
      - name: Build WASI WebAssembly module
        run: |
          npx asc assemblyscript_/wasi_.ts --target wasm32-wasi -b build/wasi_.wasm -t build/wasi_.wat

      # Install Wasmer.js (WASI runtime for Node.js)
      - name: Install Wasmer.js
        run: |
          npm install wasmtime
          npm install @wasmer/wasi
          npm install wasi

      # Run WASI WebAssembly binary using Wasmer.js (Node.js)
      - name: Run WASI program
        run: |
          node runWasiProgram.js