name: Run JShell with Maven Dependencies

on:
  push:
    branches:
      - kotlin_

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the repository
      - name: Check out code
        uses: actions/checkout@v2

      # Step 2: Set up JDK 21
      - name: Set up JDK 21
        uses: actions/setup-java@v2
        with:
          java-version: '21'
          distribution: 'temurin'

      # Step 3: Install Maven
      - name: Install Maven
        run: sudo apt-get install -y maven

      # Step 4: Download Maven dependencies
      - name: Download Maven Dependencies
        run: mvn dependency:copy-dependencies -DoutputDirectory=libs


      - name: Install Kotlin
        run: |
          curl -s https://get.sdkman.io | bash
          source "$HOME/.sdkman/bin/sdkman-init.sh"
          sdk install kotlin

      # Step 2: Run JShell with the dependencies in the classpath
      - name: Run JShell and Control Output
        run: |
            # Run JShell with the classes from the libs directory (Maven dependencies)
            jshell --class-path "libs/*" <<EOF
            
            import org.apache.commons.lang3.StringUtils;
            
            class MyGreeter {
                public static String greet(String name) {
                    String message = """
                    hello there!!
                    """ + name;
                    String capitalized = StringUtils.capitalize(message);
                    return capitalized;
                }
            }
            
            // Call the greet method and print the result
            System.out.println(MyGreeter.greet("world"));
            
            EOF

      # - name: Cache Maven dependencies
      #   uses: actions/cache@v2
      #   with:
      #     path: ~/.m2/repository
      #     key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
      #     restore-keys: |
      #       ${{ runner.os }}-maven-
      
      # - name: Install Maven dependencies
      #   run: mvn install -DskipTests  # Install dependencies, but skip tests

      - name: Compile Kotlin Code
        run: |
              kotlinc java_inMemory_inKotlin1.kt -include-runtime -d java_inMemory_inKotlin1.jar
              #kotlinc java_inMemory_inKotlin2.kt -include-runtime -d java_inMemory_inKotlin2.jar
    
    
      - name: Run Kotlin Application
        run: |
              #ls ~/.m2/repository/org/apache/commons/commons-lang3/3.12.0
              java -jar java_inMemory_inKotlin1.jar
              #java -jar java_inMemory_inKotlin2.jar
              #java -cp java_inMemory_inKotlin2.jar:~/.m2/repository/org/apache/commons/commons-lang3/3.12.0/commons-lang3-3.12.0.jar Java_inMemory_inKotlin2Kt
